import { LogType } from "../enums/type.enum";

/**
 * Represents a single log message with all associated metadata.
 * This structure is passed to outputs for formatting, filtering, and rendering.
 */
export interface LogEntry {
  /**
   * The date and time when the log entry was created.
   * Automatically generated by the logger.
   */
  timestamp: Date;

  /**
   * Semantic type of the log entry (info, error, success, etc.).
   * Used by outputs to determine how to display or categorize the message.
   */
  type: LogType;

  /**
   * The raw message template.
   * May contain placeholders such as `{0}`, `{1}` to be replaced by values from `args`.
   */
  message: string;

  /**
   * List of arguments to inject into the message template.
   * Each placeholder in the message corresponds to an index in this array.
   */
  args: unknown[];

  /**
   * Optional contextual scope name (e.g., "HTTP", "DB", "Auth").
   * Allows outputs to group or prefix logs with functional domains.
   */
  scope?: string;
}
